[start-frontend]
description = "starts the frontend in dev mode"
path = "frontend"
cmd = "yarn dev"

[gen-client]
description = "generates typescript types and build the ts client"
cmd = """
node ./client/core/ts/generate_types.mjs && \
cd ./client/core/ts && yarn build && \
cp -r dist/. ../../../frontend/public/client/."""

[link-client]
description = "yarn links the ts client to the frontend"
after = "gen-client"
cmd = """
cd ./client/core/ts && yarn link && \
cd ../../../frontend && yarn link komodo_client && yarn
"""

[build-frontend]
description = "generates fresh ts client and builds the frontend"
path = "frontend"
cmd = "yarn build"
after = "gen-client"

[publish-typescript]
path = "client/core/ts"
cmd = "npm publish"

[test-compose]
description = "deploys test.compose.yaml"
cmd = """
docker compose -p komodo-dev -f test.compose.yaml down --remove-orphans && \
docker compose -p komodo-dev -f test.compose.yaml up -d"""

[test-compose-exposed]
description = "deploys test.compose.yaml with exposed port and non-ssl periphery"
cmd = """
docker compose -p komodo-dev -f test.compose.yaml -f expose.compose.yaml down --remove-orphans && \
docker compose -p komodo-dev -f test.compose.yaml -f expose.compose.yaml up -d"""

[test-compose-build]
description = "builds and deploys test.compose.yaml"
cmd = """
docker compose -p komodo-dev -f test.compose.yaml build"""

[test-core]
description = "runs core --release pointing to .dev/core.config.toml"
cmd = "KOMODO_CONFIG_PATH=.dev/core.config.toml cargo run -p komodo_core --release"

[test-periphery]
description = "runs periphery --release pointing to .dev/periphery.config.toml"
cmd = "PERIPHERY_CONFIG_PATH=.dev/periphery.config.toml cargo run -p komodo_periphery --release"

[create-multiarch-builder]
cmd = "docker buildx create --name builder --use --bootstrap"

[build-multiarch-periphery]
cmd = """
docker build \
  --platform linux/amd64,linux/arm64 \
  -f bin/periphery/cross-compile.Dockerfile \
  .
"""

[docsite-start]
path = "docsite"
cmd = "yarn start"

[docsite-deploy]
path = "docsite"
cmd = "yarn deploy"

# [rustdoc-server]
# cmd = "cargo watch -s 'cargo doc --no-deps -p komodo_client' & http --quiet target/doc"
